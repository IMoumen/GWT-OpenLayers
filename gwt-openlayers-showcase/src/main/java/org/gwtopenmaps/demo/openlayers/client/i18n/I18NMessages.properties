filterByKeywords = Filter by keywords...
tags = Tags: {0}
viewSource = View source
noSourceFound = No sourcecode was found for this example :-(

#====================================================================================================================================================
#Source codes for all examples
#====================================================================================================================================================



#====================================================================================================================================================
#Basic OSM
#====================================================================================================================================================
basicOsmExampleSource = private static final Projection DEFAULT_PROJECTION = new Projection("EPSG:4326");\n\
//create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget and add 2 OSM layers\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
OSM osm_1 = OSM.Mapnik("Mapnik");\n\
OSM osm_2 = OSM.CycleMap("CycleMap");\n\
osm_1.setIsBaseLayer(true);\n\
osm_2.setIsBaseLayer(true);\n\
Map map = mapWidget.getMap();\n\
map.addLayer(osm_1);\n\
map.addLayer(osm_2);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
LonLat lonLat = new LonLat(6.95, 50.94);\n\
lonLat.transform(DEFAULT_PROJECTION.getProjectionCode() , map.getProjection()); //transform lonlat to OSM coordinate system\n\
map.setCenter(lonLat, 12);\n\
\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups

#====================================================================================================================================================
#Basic Bing
#====================================================================================================================================================
basicBingExampleSource = private static final Projection DEFAULT_PROJECTION = new Projection("EPSG:4326");\n\
//create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create some Bing layers\n\
final String key = "Apd8EWF9Ls5tXmyHr22OuL1ay4HRJtI4JG4jgluTDVaJdUXZV6lpSBpX-TwnoRDG"; //Bing key\n\
\n\
Bing road = new Bing(new BingOptions("Road Layer", key, BingType.ROAD));\n\
Bing hybrid = new Bing(new BingOptions("Hybrid Layer", key, BingType.HYBRID));\n\
Bing aerial = new Bing(new BingOptions("Aerial Layer", key, BingType.AERIAL));\n\
\n\
//And add them to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(road);\n\
map.addLayer(hybrid);\n\
map.addLayer(aerial);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
LonLat lonLat = new LonLat(6.95, 50.94);\n\
lonLat.transform(DEFAULT_PROJECTION.getProjectionCode() , map.getProjection()); //transform lonlat to OSM coordinate system\n\
map.setCenter(lonLat, 12);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to add Bing layers to GWT-OL.</p>"));\n\
contentPanel.add(mapWidget);\n\
\n\
initWidget(contentPanel);\n\
\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups

#====================================================================================================================================================
#Basic google V3
#====================================================================================================================================================
basicGoogleV3ExampleSource =  private static final Projection DEFAULT_PROJECTION = new Projection("EPSG:4326");\n\
//create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
\n\
//Create some Google Layers\n\
GoogleV3Options gHybridOptions = new GoogleV3Options();\n\
gHybridOptions.setIsBaseLayer(true);\n\
gHybridOptions.setType(GoogleV3MapType.G_HYBRID_MAP);\n\
GoogleV3  gHybrid = new GoogleV3("Google Hybrid", gHybridOptions);\n\
\n\
GoogleV3Options gNormalOptions = new GoogleV3Options();\n\
gNormalOptions.setIsBaseLayer(true);\n\
gNormalOptions.setType(GoogleV3MapType.G_NORMAL_MAP);\n\
GoogleV3 gNormal = new GoogleV3("Google Normal", gNormalOptions);\n\
\n\
GoogleV3Options gSatelliteOptions = new GoogleV3Options();\n\
gSatelliteOptions.setIsBaseLayer(true);\n\
gSatelliteOptions.setType(GoogleV3MapType.G_SATELLITE_MAP);\n\
GoogleV3 gSatellite = new GoogleV3("Google Satellite", gSatelliteOptions);\n\
\n\
GoogleV3Options gTerrainOptions = new GoogleV3Options();\n\
gTerrainOptions.setIsBaseLayer(true);\n\
gTerrainOptions.setType(GoogleV3MapType.G_TERRAIN_MAP);\n\
GoogleV3 gTerrain = new GoogleV3("Google Terrain", gTerrainOptions);\n\
\n\
//And add them to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(gHybrid);\n\
map.addLayer(gNormal);\n\
map.addLayer(gSatellite);\n\
map.addLayer(gTerrain);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
LonLat lonLat = new LonLat(6.95, 50.94);\n\
lonLat.transform(DEFAULT_PROJECTION.getProjectionCode() , map.getProjection()); //transform lonlat to OSM coordinate system\n\
map.setCenter(lonLat, 12);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to add Google V3 layers to GWT-OL.</p><p>If you use the Google Maps v3 API with a Google layer, you don't need to include an API key. This layer only works in the spherical mercator projection.</p><p><b>Note on Google Maps API versioning:</b> This example uses the \"nightly\" version of Google Maps API. This is specified by using v=3 in the the Google Maps API URL. Production applications should use the \"release\" or \"frozen\" versions of Google Maps API. See the OpenLayers.Layer.Google.v3 API docs, and the Versioning Section of the Google Maps API docs, for more details.</p><p>Don't forget to add the following line to your HTML if you want to use Google V3.</p><p><b>&lt;script src=\"http://maps.google.com/maps/api/js?v=3&amp;sensor=false\"&gt;&lt;/script&gt;</b></p>"));\n\
contentPanel.add(mapWidget);\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups

#====================================================================================================================================================
#Basic google V2
#====================================================================================================================================================
basicGoogleV2ExampleSource =  private static final Projection DEFAULT_PROJECTION = new Projection("EPSG:4326");\n\
//create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(20);\n\
\n\
//Create a MapWidget\n\
final MapWidget mapWidget = new MapWidget("0px", "0px", defaultMapOptions); //you can try to set this to normal size, but if map appears in upperleft corner this is the solution...\n\
//Create some Google Layers\n\
GoogleOptions gNormalOptions = new GoogleOptions();\n\
gNormalOptions.setIsBaseLayer(true);\n\
gNormalOptions.setType(GMapType.G_NORMAL_MAP);\n\
Google gNormal = new Google("Google Normal", gNormalOptions);\n\
\n\
GoogleOptions gSatelliteOptions = new GoogleOptions();\n\
gSatelliteOptions.setSphericalMercator(false);\n\
gSatelliteOptions.setIsBaseLayer(true);\n\
Google gSatellite = new Google("Google Satellite", gSatelliteOptions);\n\
\n\
GoogleOptions gHybridOptions = new GoogleOptions();\n\
gHybridOptions.setSphericalMercator(false);\n\
gHybridOptions.setIsBaseLayer(true);\n\
Google gHybrid = new Google("Google Hybrid", gHybridOptions);\n\
\n\
//And add them to the map\n\
final Map map = mapWidget.getMap();\n\
map.addLayer(gHybrid);\n\
map.addLayer(gNormal);\n\
map.addLayer(gSatellite);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
LonLat lonLat = new LonLat(6.95, 50.94);\n\
lonLat.transform(DEFAULT_PROJECTION.getProjectionCode() , map.getProjection()); //transform lonlat to map coordinate system\n\
map.setCenter(lonLat, 12);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to add Google V2 layers to GWT-OL.</p>Don''t forget to add the following line to your HTML if you want to use Google V2 (provide your own API key).</p><h2>&lt;script src='http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjpkAC9ePGem0lIq5XcMiuhR_wWLPFku8Ix9i2SXYRVK3e45q1BQUd_beF8dtzKET_EteAjPdGDwqpQ'&gt;&lt;/script&gt;</h2>"));\n\
contentPanel.add(mapWidget);\n\
\n\
initWidget(contentPanel);\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups\n\
\n\
You can try without the following code, but it is the solution if your google map appears in upperleft corner only\n\
Timer t = new Timer();\n\
&#123;\n\
&nbsp;&nbsp;&nbsp;public void run()\n\
&nbsp;&nbsp;&nbsp;&#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapWidget.setSize("500px", "500px");\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.updateSize();\n\
&nbsp;&nbsp;&nbsp;&#125;\n\
&#125;\n\
t.schedule(1); //must wait at least 1ms, when not using a Timer the map will remain in upperleft corner only''

#====================================================================================================================================================
#WMS with WFS overlay
#====================================================================================================================================================
wmsWfsExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("topp:tasmania_state_boundaries");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://demo.opengeo.org/geoserver/wms";\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Create a WFS layer\n\
WFSProtocolOptions wfsProtocolOptions = new WFSProtocolOptions();\n\
wfsProtocolOptions.setUrl("http://demo.opengeo.org/geoserver/wfs");\n\
wfsProtocolOptions.setFeatureType("tasmania_roads");\n\
wfsProtocolOptions.setFeatureNameSpace("http://www.openplans.org/topp");\n\
//if your wms is in a different projection use wfsProtocolOptions.setSrsName(LAMBERT72);\n\
\n\
WFSProtocol wfsProtocol = new WFSProtocol(wfsProtocolOptions);\n\
\n\
VectorOptions vectorOptions = new VectorOptions();\n\
vectorOptions.setProtocol(wfsProtocol);\n\
vectorOptions.setStrategies(new Strategy[] &#123; new BBoxStrategy() &#125;);\n\
//if your wms is in a different projection use vectorOptions.setProjection(LAMBERT72);\n\
\n\
Vector wfsLayer = new Vector("wfsExample", vectorOptions);\n\
\n\
map.addLayer(wfsLayer);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to add a WMS layer and a WFS overlay to a map.</p>"));\n\
contentPanel.add(mapWidget);\n\
\n\
initWidget(contentPanel);\n\
\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups

#====================================================================================================================================================
#WMS with editable WFS overlay
#====================================================================================================================================================
wmsWfsEditExampleSource = //create some MapOptions \n\
MapOptions defaultMapOptions = new MapOptions();  \n\
defaultMapOptions.setNumZoomLevels(16); \n\
//Create a MapWidget \n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("topp:tasmania_state_boundaries");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://demo.opengeo.org/geoserver/wms";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Create a WFS layer\n\
WFSProtocolOptions wfsProtocolOptions = new WFSProtocolOptions();\n\
wfsProtocolOptions.setUrl("http://demo.opengeo.org/geoserver/wfs");\n\
wfsProtocolOptions.setFeatureType("tasmania_roads");\n\
wfsProtocolOptions.setFeatureNameSpace("http://www.openplans.org/topp");\n\
//if your wms is in a different projection use wfsProtocolOptions.setSrsName(LAMBERT72);\n\
\n\
WFSProtocol wfsProtocol = new WFSProtocol(wfsProtocolOptions);\n\
\n\
VectorOptions vectorOptions = new VectorOptions();\n\
vectorOptions.setProtocol(wfsProtocol);\n\
vectorOptions.setStrategies(new Strategy[] &#123; new BBoxStrategy() &#125;);\n\
//if your wms is in a different projection use vectorOptions.setProjection(LAMBERT72);\n\
Vector wfsLayer = new Vector("wfsExample", vectorOptions);\n\
map.addLayer(wfsLayer);\n\
\n\
//Create some styles for the wfs\n\
final Style normalStyle = new Style(); //the normal style\n\
normalStyle.setStrokeWidth(3);\n\
normalStyle.setStrokeColor("#FF0000");\n\
normalStyle.setFillColor("#FFFF00");\n\
normalStyle.setFillOpacity(0.8);\n\
normalStyle.setStrokeOpacity(0.8);\n\
final Style selectedStyle = new Style(); //the style when a feature is selected, or temporaly selected\n\
selectedStyle.setStrokeWidth(3);\n\
selectedStyle.setStrokeColor("#FFFF00");\n\
selectedStyle.setFillColor("#FF0000");\n\
selectedStyle.setFillOpacity(0.8);\n\
selectedStyle.setStrokeOpacity(0.8);\n\
final StyleMap styleMap = new StyleMap(normalStyle, selectedStyle, selectedStyle);\n\
wfsLayer.setStyleMap(styleMap);\n\
\n\
//Create a ModifyFeature control that enables WFS modification\n\
final ModifyFeatureOptions modifyFeatureControlOptions = new ModifyFeatureOptions();\n\
modifyFeatureControlOptions.setMode(ModifyFeature.RESHAPE); //options are RESHAPE, RESIZE, ROTATE and DRAG\n\
final ModifyFeature modifyFeatureControl = new ModifyFeature(wfsLayer, modifyFeatureControlOptions);\n\
\n\
map.addControl(modifyFeatureControl);\n\
modifyFeatureControl.activate();\n\
\n\
/*\n\
 * Note that for saving back to the WFS you can use\n\
 * final SaveStrategy saveStrategy = new SaveStrategy();\n\
 * saveStrategy.setAuto(true);\n\
 * vectorOptions.setStrategies(new Strategy[] &#123;new BBoxStrategy(), saveStrategy &#125;); // (instead of only BBOXStrategy)\n\
 */\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to add a WMS layer and a WFS overlay to a map.</p><p>By clicking on the WFS it can be reshaped.</p>"));\n\
contentPanel.add(mapWidget);\n\
\n\
initWidget(contentPanel);\n\
\n\
mapWidget.getElement().getFirstChildElement().getStyle().setZIndex(0); //force the map to fall behind popups

#====================================================================================================================================================
#TMS example
#====================================================================================================================================================
tmsExampleSource =  /**\n\
* \n\
* @return TMS URL for OSM cyclemap\n\
*/\n\
private static native JSObject getMyUrl()\n\
/*-&#123;\n\
&nbsp;&nbsp;&nbsp;function get_my_url(bounds) &#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var res = this.map.getResolution();\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y = Math.round((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var z = this.map.getZoom();\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var limit = 100000000;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i = 0;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dir_x = x;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dir_y = y;\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = z; i > 9; i--) &#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir_x = (Math.floor(dir_x / 2.0));\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir_y = (Math.floor(dir_y / 2.0));\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125;\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path = "9_" + dir_x + "_" + dir_y + "/jpg";\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (y < 0 || y >= limit) &#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return "http://imageatlas.digitalglobe.com/ia-webapp/img/noImage.gif"\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125; else &#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit = Math.pow(2, z);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = ((x % limit) + limit) % limit;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = ((y % limit) + limit) % limit;\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var url = "http://a.tile.opencyclemap.org/cycle/" + z + "/" + x + "/" + y + ".png";\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return url;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125;\n\
&nbsp;&nbsp;&nbsp;&#125;\n\
\n\
&nbsp;&nbsp;&nbsp;return get_my_url;\n\
&#125;-*/;\n\
\n\
@Override\n\
public void buildPanel()\n\
&#123;\n\
&nbsp;&nbsp;&nbsp;//create some MapOptions\n\
&nbsp;&nbsp;&nbsp;MapOptions defaultMapOptions = new MapOptions();\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setNumZoomLevels(21);\n\
&nbsp;&nbsp;&nbsp;//specify bounds, projection, resolution, maxextent for TMS\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setProjection("EPSG:900913");\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326"));\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setUnits("m");\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setMaxResolution(156543.0339f);\n\
&nbsp;&nbsp;&nbsp;defaultMapOptions.setMaxExtent(new Bounds(-20037508, -20037508, 20037508, 20037508.34));\n\
\n\
&nbsp;&nbsp;&nbsp;//Create a MapWidget\n\
&nbsp;&nbsp;&nbsp;MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
\n\
&nbsp;&nbsp;&nbsp;//Create TMS layer\n\
&nbsp;&nbsp;&nbsp;TMSOptions tmsOptions = new TMSOptions();\n\
&nbsp;&nbsp;&nbsp;tmsOptions.setDisplayOutsideMaxExtent(false);\n\
&nbsp;&nbsp;&nbsp;tmsOptions.setIsBaseLayer(true);\n\
&nbsp;&nbsp;&nbsp;tmsOptions.setType("jpg");\n\
&nbsp;&nbsp;&nbsp;tmsOptions.setGetURL(getMyUrl());\n\
\n\
&nbsp;&nbsp;&nbsp;TMS tms = new TMS("TMS", "", tmsOptions);\n\
\n\
&nbsp;&nbsp;&nbsp;//And add them to the map\n\
&nbsp;&nbsp;&nbsp;Map map = mapWidget.getMap();\n\
&nbsp;&nbsp;&nbsp;map.addLayer(tms);\n\
\n\
&nbsp;&nbsp;&nbsp;//Lets add some default controls to the map\n\
&nbsp;&nbsp;&nbsp;map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
&nbsp;&nbsp;&nbsp;map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
&nbsp;&nbsp;&nbsp;map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
&nbsp;&nbsp;&nbsp;//Center and zoom to a location\n\
&nbsp;&nbsp;&nbsp;LonLat lonLat = new LonLat(6.95, 50.94);\n\
&nbsp;&nbsp;&nbsp;lonLat.transform(DEFAULT_PROJECTION.getProjectionCode() , map.getProjection()); //transform lonlat to OSM coordinate system\n\
&nbsp;&nbsp;&nbsp;map.setCenter(lonLat, 12);\n\
\n\
&nbsp;&nbsp;&nbsp;contentPanel.add(new HTML("<p>This example shows how to add a TMS layer to GWT-OL.</p>"));\n\
&nbsp;&nbsp;&nbsp;contentPanel.add(mapWidget);\n\
\n\
&nbsp;&nbsp;&nbsp;map.zoomToMaxExtent();\n\
\n\
&#125;

#====================================================================================================================================================
#Custom mouse position example
#====================================================================================================================================================
customMousePostionExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326")); //causes the mouse popup to display coordinates in this format\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("basic");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://labs.metacarta.com/wms/vmap0";\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Adds the custom mouse position to the map\n\
MousePositionOutput mpOut = new MousePositionOutput()\n\
&#123;\n\
&nbsp;&nbsp;&nbsp;public String format(LonLat lonLat, Map map)\n\
&nbsp;&nbsp;&nbsp;&#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String out = "";\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out += "<b>This is the longitude </b> ";\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out += lonLat.lon();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out += "<b>, and this the latitude</b> ";\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out += lonLat.lat();\n\
&nbsp;&nbsp;&nbsp;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return out;\n\
&nbsp;&nbsp;&nbsp;&#125;\n\
\n\
&#125;;\n\
\n\
MousePositionOptions mpOptions = new MousePositionOptions();\n\
mpOptions.setFormatOutput(mpOut); // rename to setFormatOutput\n\
\n\
map.addControl(new MousePosition(mpOptions));\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);

#====================================================================================================================================================
#Graticule example
#====================================================================================================================================================
graticuleExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326")); //causes the mouse popup to display coordinates in this format\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("basic");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://labs.metacarta.com/wms/vmap0";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Adds the graticule control\n\
LineSymbolizerOptions lineOptions = new LineSymbolizerOptions();\n\
lineOptions.setStrokeColor("#ccccff");\n\
lineOptions.setStrokeOpacity(0.5);\n\
lineOptions.setStrokeWidth(1);\n\
\n\
LineSymbolizer line = new LineSymbolizer(lineOptions);\n\
\n\
TextSymbolizerOptions textOptions = new TextSymbolizerOptions();\n\
textOptions.setFontSize("9px");\n\
\n\
TextSymbolizer text = new TextSymbolizer(textOptions);\n\
\n\
final GraticuleOptions grtOptions = new GraticuleOptions();\n\
\n\
grtOptions.setTargetSize(200);\n\
grtOptions.setLabelled(true);\n\
grtOptions.setLineSymbolyzer(line);\n\
grtOptions.setLabelSymbolizer(text);\n\
Graticule graticule = new Graticule(grtOptions);\n\
\n\
graticule.setAutoActivate(true);\n\
\n\
map.addControl(graticule);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);

#====================================================================================================================================================
#WMS get feature info example
#====================================================================================================================================================
wmsFeatureInfoExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326")); //causes the mouse popup to display coordinates in this format\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("topp:tasmania_state_boundaries");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://demo.opengeo.org/geoserver/wms";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Adds the WMSGetFeatureInfo control\n\
WMSGetFeatureInfoOptions wmsGetFeatureInfoOptions = new WMSGetFeatureInfoOptions();\n\
wmsGetFeatureInfoOptions.setMaxFeaturess(50);\n\
wmsGetFeatureInfoOptions.setLayers(new WMS[] &#123;wmsLayer&#125;);\n\
wmsGetFeatureInfoOptions.setDrillDown(true);\n\
//to request a GML string instead of HTML : wmsGetFeatureInfoOptions.setInfoFormat(GetFeatureInfoFormat.GML.toString());\n\
\n\
WMSGetFeatureInfo wmsGetFeatureInfo = new WMSGetFeatureInfo(wmsGetFeatureInfoOptions);\n\
\n\
wmsGetFeatureInfo.addGetFeatureListener(new GetFeatureInfoListener()\n\
&#123;\n\
&nbsp;&nbsp;&nbsp;public void onGetFeatureInfo(GetFeatureInfoEvent eventObject)\n\
&nbsp;&nbsp;&nbsp;&#123;\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//if you did a wmsGetFeatureInfoOptions.setInfoFormat(GetFeatureInfoFormat.GML.toString()) you can do a VectorFeature[] features = eventObject.getFeatures(); here\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogBoxWithCloseButton db = new DialogBoxWithCloseButton();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HTML html = new HTML(eventObject.getText());\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db.setWidget(html);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db.center();\n\
&nbsp;&nbsp;&nbsp;&#125;\n\
&#125;);\n\
map.addControl(wmsGetFeatureInfo);\n\
wmsGetFeatureInfo.activate();\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);

#====================================================================================================================================================
#Vector example
#====================================================================================================================================================
vectorExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326")); //causes the mouse popup to display coordinates in this format\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("basic");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://labs.metacarta.com/wms/vmap0";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Add a clickable marker to the map, the marker is actually a Vector\n\
\n\
//create a layer to add the marker to\n\
final Vector vectorLayer = new Vector("Markerlayer");\n\
map.addLayer(vectorLayer);\n\
\n\
//SelectFeature control to capture clicks on the marker\n\
SelectFeature selectFeature = new SelectFeature(vectorLayer);\n\
selectFeature.setAutoActivate(true);\n\
map.addControl(selectFeature);\n\
\n\
//Define a style for the marker\n\
Style pointStyle = new Style();\n\
pointStyle.setFillColor("red");\n\
pointStyle.setStrokeColor("green");\n\
pointStyle.setStrokeWidth(2);\n\
pointStyle.setFillOpacity(0.9);\n\
/* or if you want to use an image\n\
pointStyle.setExternalGraphic("http://photo-dictionary.com/photofiles/list/3020/4043yellow_marker.jpg");\n\
pointStyle.setGraphicSize(50, 50);\n\
*/\n\
\n\
//Add a point\n\
Point point = new Point(146.7, -41.8);\n\
VectorFeature pointFeature = new VectorFeature(point, pointStyle);\n\
vectorLayer.addFeature(pointFeature);\n\
\n\
//Add a line\n\
Point[] linePoints = &#123new Point(145, -40), new Point(147, 42)&#125;\n\
LineString ls = new LineString(linePoints);\n\
vectorLayer.addFeature(new VectorFeature(ls, pointStyle));\n\
\n\
//capture clicks on the vectorlayer\n\
vectorLayer.addVectorFeatureSelectedListener(new VectorFeatureSelectedListener()\n\
&#123\n\
\n\
public void onFeatureSelected(FeatureSelectedEvent eventObject)\n\
&#123\n\
Window.alert("clicked on a vector");\n\
&#125\n\
&#125);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);

#====================================================================================================================================================
#Measure example
#====================================================================================================================================================
measureExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setDisplayProjection(new Projection("EPSG:4326")); //causes the mouse popup to display coordinates in this format\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("basic");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://labs.metacarta.com/wms/vmap0";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Add a measure control to the map\n\
MeasureOptions measOpts = new MeasureOptions();\n\
measOpts.setPersist(true);\n\
measOpts.setGeodesic(true); //earth is not a cylinder\n\
Measure measure = new Measure(new PathHandler(), measOpts);\n\
map.addControl(measure);\n\
\n\
measure.addMeasureListener(new MeasureListener()\n\
&#123\n\
&nbsp;&nbsp;&nbsp;public void onMeasure(MeasureEvent eventObject)\n\
&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Window.alert("Measured distance is " + eventObject.getMeasure() + " " + eventObject.getUnits() );\n\
&nbsp;&nbsp;&nbsp;&#125\n\
&#125);\n\
measure.activate();\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);

#====================================================================================================================================================
#Gps example
#====================================================================================================================================================
gpsExampleSource = create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
// Create a MapWidget and add 2 OSM layers\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
OSM osm_1 = OSM.Mapnik("Mapnik");\n\
OSM osm_2 = OSM.CycleMap("CycleMap");\n\
osm_1.setIsBaseLayer(true);\n\
osm_2.setIsBaseLayer(true);\n\
final Map map = mapWidget.getMap();\n\
map.addLayer(osm_1);\n\
map.addLayer(osm_2);\n\
\n\
// Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); // + sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); // + sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); // Display the scaleline\n\
\n\
// Center and zoom to a location\n\
LonLat lonLat = new LonLat(6.95, 50.94);\n\
lonLat.transform(DEFAULT_PROJECTION.getProjectionCode(), map.getProjection()); // transform lonlat to OSM coordinate system\n\
map.setCenter(lonLat, 18);\n\
\n\
// Create a marker layer to the current location marker\n\
final Vector markerLayer = new Vector("Marker layer");\n\
map.addLayer(markerLayer);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to display a marker on the users current GPS location.</p>" +\n\
"<p>This actually just uses the GWT GeoLocation class and displays a marker on the returned location."));\n\
contentPanel.add(new InfoPanel("<p>Don''t forget to add the following line to your html file if you want to use OSM :</p>"\n\
+ "<p><b>&lt;script src="http://www.openstreetmap.org/openlayers/OpenStreetMap.js"&gt;&lt;/script&gt;</b></p>"));\n\
contentPanel.add(mapWidget);\n\
Button gpsButton = new Button("Go to current GPS location", new ClickHandler()\n\
&#123\n\
&nbsp;&nbsp;&nbsp;public void onClick(ClickEvent event)\n\
&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Start GeoLocation stuff (note that the GeoLocation is just plain GWT stuff)\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Geolocation geoLocation = Geolocation.getIfSupported();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (geoLocation == null)\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Window.alert("No GPS supprt available in this browser :-(");\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final Geolocation.PositionOptions geoOptions = new Geolocation.PositionOptions();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoOptions.setHighAccuracyEnabled(true);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoLocation.watchPosition(new Callback<Position, PositionError>()\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void onFailure(final PositionError reason)\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Window.alert("Something went wrong fetching the geolocation:\n" + reason);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void onSuccess(final Position result)\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// put the received result in an openlayers LonLat\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// object\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final LonLat lonLat = new LonLat(result.getCoordinates().getLongitude(), result.getCoordinates().getLatitude());\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lonLat.transform(DEFAULT_PROJECTION.getProjectionCode(), map.getProjection()); // transform lonlat to OSM coordinate system\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Center the map on the received location\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.setCenter(lonLat);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// lets create a vector point on the location\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Style pointStyle = new Style();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pointStyle.setFillColor("red");\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pointStyle.setStrokeColor("green");\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pointStyle.setStrokeWidth(2);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pointStyle.setFillOpacity(0.9);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final Point point = new Point(result.getCoordinates().getLongitude(), result.getCoordinates().getLatitude());\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point.transform(DEFAULT_PROJECTION, new Projection(map.getProjection())); // transform point to OSM coordinate system\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final VectorFeature pointFeature = new VectorFeature(point, pointStyle);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerLayer.destroyFeatures();\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerLayer.addFeature(pointFeature);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125, geoOptions);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125\n\
&nbsp;&nbsp;&nbsp;&#125\n\
&#125);\n\
contentPanel.add(gpsButton);

#====================================================================================================================================================
#WFS refrsh example
#====================================================================================================================================================
wfsRefreshExampleSource = //create the refresh strategy\n\
final RefreshStrategy refreshStrategy = new RefreshStrategy();\n\
refreshStrategy.setForce(true);\n\
\n\
//create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("topp:tasmania_state_boundaries");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://demo.opengeo.org/geoserver/wms";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Create a WFS layer\n\
WFSProtocolOptions wfsProtocolOptions = new WFSProtocolOptions();\n\
wfsProtocolOptions.setUrl("http://demo.opengeo.org/geoserver/wfs");\n\
wfsProtocolOptions.setFeatureType("tasmania_roads");\n\
wfsProtocolOptions.setFeatureNameSpace("http://www.openplans.org/topp");\n\
//if your wms is in a different projection use wfsProtocolOptions.setSrsName(LAMBERT72);\n\
\n\
WFSProtocol wfsProtocol = new WFSProtocol(wfsProtocolOptions);\n\
\n\
VectorOptions vectorOptions = new VectorOptions();\n\
vectorOptions.setProtocol(wfsProtocol);\n\
vectorOptions.setStrategies(new Strategy[] &#123 new BBoxStrategy(), refreshStrategy &#125);\n\
//if your wms is in a different projection use vectorOptions.setProjection(LAMBERT72);\n\
\n\
final Vector wfsLayer = new Vector("wfsExample", vectorOptions);\n\
map.addLayer(wfsLayer);\n\
\n\
//Create some styles for the wfs\n\
final Style normalStyle = new Style(); //the normal style\n\
normalStyle.setStrokeWidth(3);\n\
normalStyle.setStrokeColor("#FF0000");\n\
normalStyle.setFillColor("#FFFF00");\n\
normalStyle.setFillOpacity(0.8);\n\
normalStyle.setStrokeOpacity(0.8);\n\
final Style selectedStyle = new Style(); //the style when a feature is selected, or temporaly selected\n\
selectedStyle.setStrokeWidth(3);\n\
selectedStyle.setStrokeColor("#FFFF00");\n\
selectedStyle.setFillColor("#FF0000");\n\
selectedStyle.setFillOpacity(0.8);\n\
selectedStyle.setStrokeOpacity(0.8);\n\
final StyleMap styleMap = new StyleMap(normalStyle, selectedStyle, selectedStyle);\n\
wfsLayer.setStyleMap(styleMap);\n\
\n\
//Create a ModifyFeature control that enables WFS modification\n\
final ModifyFeatureOptions modifyFeatureControlOptions = new ModifyFeatureOptions();\n\
modifyFeatureControlOptions.setMode(ModifyFeature.RESHAPE); //options are RESHAPE, RESIZE, ROTATE and DRAG\n\
final ModifyFeature modifyFeatureControl = new ModifyFeature(wfsLayer, modifyFeatureControlOptions);\n\
\n\
map.addControl(modifyFeatureControl);\n\
modifyFeatureControl.activate();\n\
refreshStrategy.activate();\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(146.7, -41.8), 6);\n\
\n\
contentPanel.add(new HTML("<p>This example shows how to refresh a WFS layer to the server state.</p><p>By clicking on the WFS it can be reshaped.</p><p>By clicking on refresh the original state is refreshed from the server.</p>"));\n\
contentPanel.add(new InfoPanel("For WFS it is adviced to use a proxy to avoid cross reference problems. See the gwt-openlayers-server code for more info."));\n\
\n\
Button butRefresh = new Button("Refresh");\n\
contentPanel.add(butRefresh);\n\
contentPanel.add(mapWidget);\n\
butRefresh.addClickHandler(new ClickHandler()\n\
&#123\n\
&nbsp;&nbsp;&nbsp;public void onClick(ClickEvent event)\n\
&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;refreshStrategy.refresh();\n\
&nbsp;&nbsp;&nbsp;&#125\n\
&#125);

#====================================================================================================================================================
#Rotate example
#====================================================================================================================================================

rotateExampleSource = //create some MapOptions\n\
MapOptions defaultMapOptions = new MapOptions();\n\
defaultMapOptions.setNumZoomLevels(16);\n\
//Create a MapWidget\n\
MapWidget mapWidget = new MapWidget("500px", "500px", defaultMapOptions);\n\
//Create a WMS layer as base layer\n\
WMSParams wmsParams = new WMSParams();\n\
wmsParams.setFormat("image/png");\n\
wmsParams.setLayers("basic");\n\
wmsParams.setStyles("");\n\
\n\
WMSOptions wmsLayerParams = new WMSOptions();\n\
wmsLayerParams.setUntiled();\n\
wmsLayerParams.setTransitionEffect(TransitionEffect.RESIZE);\n\
\n\
String wmsUrl = "http://vmap0.tiles.osgeo.org/wms/vmap0";\n\
\n\
WMS wmsLayer = new WMS("Basic WMS", wmsUrl, wmsParams, wmsLayerParams);\n\
\n\
//Add the WMS to the map\n\
Map map = mapWidget.getMap();\n\
map.addLayer(wmsLayer);\n\
\n\
//Add some vectors\n\
final Vector vectorLayer = new Vector("Simple Geometry");\n\
map.addLayer(vectorLayer);\n\
\n\
//create a point feature\n\
final Point point = new Point(-110, 45); //we need a Point object because this has the rotate method\n\
Style pointStyle = new Style();\n\
pointStyle.setFillColor("blue");\n\
pointStyle.setStrokeColor("blue");\n\
pointStyle.setStrokeWidth(3);\n\
pointStyle.setPointRadius(6);\n\
pointStyle.setFillOpacity(0.6);\n\
final VectorFeature pointFeature = new VectorFeature(point, pointStyle); //create a VectorFeature from the rotatable Polygon\n\
vectorLayer.addFeature(pointFeature);\n\
\n\
//create a line feature\n\
Point[] linePoints = &#123new Point(-120, 40), new Point(-115, 45), new Point(-110, 40)&#125;\n\
final LineString lineString = new LineString(linePoints);//we need a LineString object because this has the rotate method\n\
final Style lineStyle = new Style();\n\
lineStyle.setStrokeColor("#339933");\n\
lineStyle.setStrokeWidth(3);\n\
lineStyle.setPointRadius(6);\n\
final VectorFeature lineFeature = new VectorFeature(lineString, lineStyle); //create a VectorFeature from the rotatable LineString\n\
vectorLayer.addFeature(lineFeature);\n\
\n\
// create a polygon feature from a linear ring of points\n\
Point[] pointList = new Point[6];\n\
for (int p = 0; p < 6; p++)\n\
&#123\n\
&nbsp;&nbsp;&nbsp;double a = p * (2 * Math.PI) / 7;\n\
&nbsp;&nbsp;&nbsp;double r = Math.random() + 1;\n\
&nbsp;&nbsp;&nbsp;Point newPoint = new Point(point.getX() + (r * Math.cos(a)), point.getY() + (r * Math.sin(a)));\n\
&nbsp;&nbsp;&nbsp;pointList[p] = newPoint;\n\
&#125\n\
LinearRing linearRing = new LinearRing(pointList);\n\
final Polygon polygon = new Polygon(new LinearRing[]&#123linearRing&#125); //we need a Polygon object because this has the rotate method\n\
final VectorFeature polygonFeature = new VectorFeature(polygon, lineStyle); //create a VectorFeature from the rotatable Polygon\n\
vectorLayer.addFeature(polygonFeature);\n\
\n\
//Lets add some default controls to the map\n\
map.addControl(new LayerSwitcher()); //+ sign in the upperright corner to display the layer switcher\n\
map.addControl(new OverviewMap()); //+ sign in the lowerright to display the overviewmap\n\
map.addControl(new ScaleLine()); //Display the scaleline\n\
\n\
//Center and zoom to a location\n\
map.setCenter(new LonLat(point.getX(), point.getY()), 5);\n\
\n\
//start the actual rotating\n\
final Point origin = new Point(-111.04, 45.68);\n\
\n\
final Timer t = new Timer() //we just use a GWT timer to have animation, no need for special OpenLayer timer stuff...\n\
&#123\n\
&nbsp;&nbsp;&nbsp;@Override\n\
&nbsp;&nbsp;&nbsp;public void run()\n\
&nbsp;&nbsp;&nbsp;&#123\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;polygon.rotate(-360 / 20, origin);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vectorLayer.drawFeature(polygonFeature, lineStyle);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lineString.rotate(360 / 40, origin);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vectorLayer.drawFeature(lineFeature, lineStyle);\n\
\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point.rotate(360 / 20, origin);\n\
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vectorLayer.drawFeature(pointFeature, lineStyle);\n\
&nbsp;&nbsp;&nbsp;&#125\n\
&#125;\n\
t.scheduleRepeating(100);\n\
\n\
contentPanel.add(mapWidget);


#====================================================================================================================================================
#Transform example
#====================================================================================================================================================

transformExampleSource = 